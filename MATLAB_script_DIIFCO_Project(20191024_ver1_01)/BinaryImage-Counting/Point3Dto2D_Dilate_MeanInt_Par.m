function F_XYZIDint = Point3Dto2D_Dilate_MeanInt_Par (data_dir, F_XYZID, se, out_dir)
 
% Scripts for DIIFCO(for diagnosing in situ immunofluorescence-labelled
% cleared oncosamples) project
%
% by Per Uhlen lab 
% Ver 1.01
%
% These scripts are written by Shigeaki Kanatani 
% 
% Contact: Per Uhlén, per.uhlen@ki.se
%          Shigeaki Kanatani, shigeaki.kanatani@ki.se
% 
% Karolinska Institutet, Stockholm, Sweden 

%% Summary 
 % (1. point area less than 0 is not calculated)
 % Z-plane which has points less than 4 is now ok.
 
 %This script calculate mean intensity value of each dots area difined with 2d-se.
 
 %F_XYZID;% XYZ coordinates list of points. Three rows of x,y,z (x=width,
 %y=height, z=depth) and ID
 %out_dir: Output directory of matfiles
 
 %se was generated by this script
 %SE_shape= strel('disk', 8,0);
 %se=SE_shape.Neighborhood; %se is 2 dimension only
 
 
%% 
 AllPoint=length(F_XYZID);
 MeanInt=cell(AllPoint,1);
 Im=datastore(data_dir, 'FileExtensions', '.tif','Type', 'image');
 
 list = dir([data_dir '\*.tif']);
 depth=length(list);
 
 [SE_X,SE_Y] = ind2sub(size(se),find(se == 1)); 
 stats=regionprops(se);
 center=stats.Centroid; 
 SE_X_Off=SE_X-center(1,1);
 SE_Y_Off=SE_Y-center(1,2);
 
 poolobj = gcp('nocreate'); 
 delete(poolobj);
 no_of_workers = 12;
 parpool ('local',no_of_workers);  
 
 parfor d=1:depth      
    disp(['d=' num2str(d)]);
    F_Ind_D = F_XYZID(:,3)==d; 
    dXYZ=F_XYZID(F_Ind_D,:);  
   
    T_image=readimage(Im,d);  
    P_MeanInt=zeros(length(dXYZ(:,1)),1); 
    
    for p=1:length(dXYZ(:,1)) 
    
    pXYZ=dXYZ(p,:);
    px=pXYZ(:,1);
    py=pXYZ(:,2); 
    
    SE_X_p=px+SE_X_Off; 
    SE_Y_p=py+SE_Y_Off;
    SE_Z_p=d;  
    
    [ImY,ImX]=size(T_image);
    SE_X_p2= (SE_X_p<= ImX) & (SE_X_p >= 1); 
    SE_Y_p2= (SE_Y_p<= ImY) & (SE_Y_p >= 1); 
    SE_XY_p2= SE_X_p2 & SE_Y_p2;
    SE_X_p(SE_XY_p2==0)=[]; 
    SE_Y_p(SE_XY_p2==0)=[];
     
    linearInd = sub2ind(size(T_image), SE_Y_p, SE_X_p); 
    DP_T_image=T_image(linearInd);
    P_MeanInt(p,1)=mean2(DP_T_image); 
    
    end
    
    MeanT=cat(2, dXYZ, P_MeanInt);
    MeanInt(d)={MeanT}; 
    
 end
     
    F_XYZIDint=sortrows(cell2mat(MeanInt),4);
    save([out_dir '\' 'MeanInt.mat'],'MeanInt');
    save([out_dir '\' 'F_XYZIDint.mat'],'F_XYZIDint');
    
    poolobj = gcp('nocreate');
    delete(poolobj);
    
end